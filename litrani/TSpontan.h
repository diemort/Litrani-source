// @(#)root/html:$Id: TSpontan.h 2008-06-11
// Author: F.X. Gentit <http://gentit.home.cern.ch/gentit/>

/*************************************************************************
* Copyright (C) Those valid for CNRS software.                          *
*************************************************************************/
#ifndef LITR_TSpontan
#define LITR_TSpontan
//////////////////////////////////////////////////////////////////////////
//                                                                      //
//   TSpontan    spontaneous source of photon inside a shape            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////
#include "TPhotonCradle.h"

enum ChoiceOfn    {israndom=0,biggest,smallest};

class TSupplShape;
class TPhoton;
class TResults;
class TPublication;

class TSpontan:public TNamed {

protected:

  Bool_t          fFillDeath;   //! true if FillDeath has to be called
  TH1F           *fHX0;         //! histo of x coord of death point of seen photons, defined in CINT
  TH1F           *fHY0;         //! histo of y coord of death point of seen photons, defined in CINT
  TH1F           *fHZ0;         //! histo of z coord of death point of seen photons, defined in CINT
  Int_t           fGenFace;     //face on which photon is generated, or -1
  TPhotonCradle  *fBeam;        //! all characteristics of the beam of photons
  T3Vector        fCenter;      //center of the cradle of the beam in LCS of fSupplShape
  Bool_t          fFromFace;    //true if the beam cradle is a face of the shape
  ChoiceOfn       fChooseIndex; //chooses between the 2 possible values of index in case of anisotropy
  Int_t           fRun;         //run number
  TString         fFullName;    //fName + run number
  Bool_t          fRunStat;     //ask for separate statistics and histograms for this run
  TPhoton        *fPhot;        //! pointer to generated photons
  Bool_t          fWvlgthFixed; //if true, wavelength fixed, not generated by material
  Double_t        fWvlgth;      //value of wavelength
  Double_t        fT0;          //start time of photon in picoseconds
  TSupplShape    *fSupplShape;  //! TSupplShape in which beam cradle is.
  TOpticMaterial *fMat;         //! material of shape

  Bool_t          AddToList() const;
  Bool_t          AddToList(const char*) const;
  void            FillDeath() const;
  void            InitP();

public:

  TSpontan() { InitP(); }
  TSpontan(const char*,const char*,const char*,Double_t,Double_t,Double_t);
  TSpontan(const char*,const char*,const char*,Double_t,Double_t,Double_t,Double_t);
  TSpontan(const char*,const char*,const char*,Int_t);
  TSpontan(const char*,const char*,const char*,Double_t,Int_t);
  virtual        ~TSpontan();
  void            DefineBeam(KindOfDist,Double_t,Double_t,Double_t,const char *distrib="",
    Bool_t=kFALSE,Double_t=90,Double_t=0,ChoiceOfn = israndom);
  void            DefineBeam(KindOfDist,Double_t,const char *distrib="",
    Bool_t=kFALSE,Double_t=90,Double_t=0,ChoiceOfn = israndom);
  void            DefineCradle(const char*,KindOfCradle,
    Double_t=1,Double_t=1,Double_t=1,
    Double_t=0,Double_t=0,Double_t=90,Double_t=0);
  void            DefineCradle(const char*,KindOfCradle,
    Double_t,Double_t,Double_t,
    Double_t,Double_t,Double_t,Double_t,Double_t,Double_t);
  void            Gen(Int_t,Int_t = 1,Double_t = -2.0e+20,Bool_t=kTRUE,Bool_t=kFALSE);
  void            Print() const;
  void            SetFillDeath(TH1F*, TH1F*, TH1F*);
  void            SetWvlgth(Double_t);
  ClassDef(TSpontan,0) //Spontaneous source of photon inside a shape
};
#endif
